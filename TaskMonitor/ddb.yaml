AWSTemplateFormatVersion: '2010-09-09'
Metadata: 
  License: Apache-2.0
Description: 'S3 Cross Replication Monitoring & Statistic DynamoDB'
Parameters:
  MonitorTableName:
    Description: Name of the table
    Type: String
    AllowedPattern: '[a-zA-Z0-9\_\.]*'
    Default: 's3cross_monitor'
    MinLength: '3'
    MaxLength: '255'
    ConstraintDescription: must contain only alphanumberic characters   
  StatTableName:
    Description: Name of the s3 monitor stats table
    Type: String
    AllowedPattern: '[a-zA-Z0-9\_\.]*'
    Default: 's3cross_stat'
    MinLength: '3'
    MaxLength: '255'
    ConstraintDescription: must contain only alphanumberic characters       
  ReadCapacityUnits:
    Description: Provisioned read throughput
    Type: Number
    Default: '100'
    MinValue: '100'
    MaxValue: '10000'
    ConstraintDescription: must be between 5 and 10000
  WriteCapacityUnits:
    Description: Provisioned write throughput
    Type: Number
    Default: '100'
    MinValue: '100'
    MaxValue: '10000'
    ConstraintDescription: must be between 5 and 10000
Resources:
  myDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "ObjectKey"
        AttributeType: "S"
      - AttributeName: "ReplicationTime"
        AttributeType: "N"
      - AttributeName: "ReplicationStatus"
        AttributeType: "N"        
      KeySchema:
      - AttributeName: "ObjectKey"
        KeyType: HASH
      - AttributeName: "ReplicationTime"
        KeyType: RANGE           
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref 'ReadCapacityUnits'
        WriteCapacityUnits: !Ref 'WriteCapacityUnits'
      TableName: !Ref 'MonitorTableName' 
      GlobalSecondaryIndexes:
      - IndexName: "gsiStatus"
        KeySchema:
        - AttributeName: "ReplicationStatus"
          KeyType: HASH    
        Projection:
          ProjectionType: "INCLUDE"
          NonKeyAttributes:
          - "ReplicationTime"
          - "ObjectKey"
          - "Size"  
        ProvisionedThroughput:
          ReadCapacityUnits: !Ref 'ReadCapacityUnits'
          WriteCapacityUnits: !Ref 'WriteCapacityUnits'
      - IndexName: "ReplicationStatus-ReplicationTime-index"
        KeySchema:
        - AttributeName: "ReplicationStatus"
          KeyType: HASH    
        - AttributeName: "ReplicationTime"
          KeyType: RANGE            
        Projection:
          ProjectionType: "INCLUDE"
          NonKeyAttributes:
          - "ObjectKey"
          - "Size"      
        ProvisionedThroughput:
          ReadCapacityUnits: !Ref 'ReadCapacityUnits'
          WriteCapacityUnits: !Ref 'WriteCapacityUnits'              

  statDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "TimeUnit"
        AttributeType: "N"
      - AttributeName: "StartTime"
        AttributeType: "N"
      # - AttributeName: "FailedObjectSize"
      #   AttributeType: "N"    
      - AttributeName: "FailedObjectNum"
        AttributeType: "N"  
      # - AttributeName: "SuccessObjectSize"
      #   AttributeType: "N"  
      - AttributeName: "SuccessObjectNum"
        AttributeType: "N"                              
      KeySchema:
      - AttributeName: "TimeUnit"
        KeyType: HASH
      - AttributeName: "StartTime"
        KeyType: RANGE           
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref 'ReadCapacityUnits'
        WriteCapacityUnits: !Ref 'WriteCapacityUnits'
      TableName: !Ref 'StatTableName'
      GlobalSecondaryIndexes:
      - IndexName: "gsiTimeUnit"
        KeySchema:
        - AttributeName: "TimeUnit"
          KeyType: HASH
        - AttributeName: "StartTime"
          KeyType: RANGE                          
        Projection:
          ProjectionType: "INCLUDE"
          NonKeyAttributes:
          - "SuccessObjectNum"
          - "FailedObjectNum"
        ProvisionedThroughput:
          ReadCapacityUnits: !Ref 'ReadCapacityUnits'
          WriteCapacityUnits: !Ref 'WriteCapacityUnits' 

      LocalSecondaryIndexes:
      - IndexName: "lsiNumSuccess"
        KeySchema:
        - AttributeName: "TimeUnit"
          KeyType: HASH
        - AttributeName: "SuccessObjectNum"
          KeyType: RANGE                          
        Projection:
          ProjectionType: "INCLUDE"
          NonKeyAttributes:
          - "FailedObjectNum"
          - "StartTime"
      - IndexName: "lsiNumFailed"
        KeySchema:
        - AttributeName: "TimeUnit"
          KeyType: HASH
        - AttributeName: "FailedObjectNum"
          KeyType: RANGE                          
        Projection:
          ProjectionType: "INCLUDE"
          NonKeyAttributes:
          - "SuccessObjectNum"
          - "StartTime"                  
                     
          
  WriteCapacityScalableTarget:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 10000
      MinCapacity: !Ref 'WriteCapacityUnits'
      ResourceId: !Join
        - /
        - - table
          - !Ref myDynamoDBTable
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
  ReadCapacityScalableTarget:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 10000
      MinCapacity: !Ref 'ReadCapacityUnits'
      ResourceId: !Join
        - /
        - - table
          - !Ref myDynamoDBTable
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb   
 
  GSIWriteCapacityScalableTarget:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 10000
      MinCapacity: !Ref 'WriteCapacityUnits'
      ResourceId: !Join
        - /
        - - table
          - !Ref myDynamoDBTable
          - index
          - ReplicationStatus-ReplicationTime-index
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:index:WriteCapacityUnits
      ServiceNamespace: dynamodb
  GSIReadCapacityScalableTarget:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 10000
      MinCapacity: !Ref 'ReadCapacityUnits'
      ResourceId: !Join
        - /
        - - table
          - !Ref myDynamoDBTable
          - index
          - ReplicationStatus-ReplicationTime-index
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:index:ReadCapacityUnits
      ServiceNamespace: dynamodb 

  GSIWriteCapacityScalableTarget2:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 10000
      MinCapacity: !Ref 'WriteCapacityUnits'
      ResourceId: !Join
        - /
        - - table
          - !Ref myDynamoDBTable
          - index
          - gsiStatus
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:index:WriteCapacityUnits
      ServiceNamespace: dynamodb
  GSIReadCapacityScalableTarget2:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 10000
      MinCapacity: !Ref 'ReadCapacityUnits'
      ResourceId: !Join
        - /
        - - table
          - !Ref myDynamoDBTable
          - index
          - gsiStatus
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:index:ReadCapacityUnits
      ServiceNamespace: dynamodb       
 
  ScalingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - application-autoscaling.amazonaws.com.cn
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "dynamodb:DescribeTable"
                  - "dynamodb:UpdateTable"
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:GetMetricStatistics"
                  - "cloudwatch:SetAlarmState"
                  - "cloudwatch:DeleteAlarms"
                Resource: "*"      
  WriteScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref WriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
  ReadScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization             
  GSIWriteScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref GSIWriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
  GSIReadScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref GSIReadCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization  

  GSIWriteScalingPolicy2:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref GSIWriteCapacityScalableTarget2
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
  GSIReadScalingPolicy2:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref GSIReadCapacityScalableTarget2
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization 
  GSIWriteCapacityScalableTarget3:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 10000
      MinCapacity: !Ref 'WriteCapacityUnits'
      ResourceId: !Join
        - /
        - - table
          - !Ref statDynamoDBTable
          - index
          - gsiTimeUnit
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:index:WriteCapacityUnits
      ServiceNamespace: dynamodb
  GSIReadCapacityScalableTarget3:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    Properties:
      MaxCapacity: 10000
      MinCapacity: !Ref 'ReadCapacityUnits'
      ResourceId: !Join
        - /
        - - table
          - !Ref statDynamoDBTable
          - index
          - gsiTimeUnit
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:index:ReadCapacityUnits
      ServiceNamespace: dynamodb 
  GSIWriteScalingPolicy3:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref GSIWriteCapacityScalableTarget3
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
  GSIReadScalingPolicy3:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: ReadAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref GSIReadCapacityScalableTarget3
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization  
                    

Outputs:
  MonitorTableName:
    Value: !Ref 'myDynamoDBTable'
    Description: Table name of the newly created monitor table
  StatisticTableName:
    Value: !Ref 'statDynamoDBTable'
    Description: Table name of the newly created statistic table    